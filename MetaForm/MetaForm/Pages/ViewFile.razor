@page "/view-file/{fileName}"
@inject IWebHostEnvironment WebHostEnvironment
@using System.IO
@inject IJSRuntime JSRuntime

@code {
    [Parameter]
    public string FileName { get; set; }

    private string FileContent { get; set; }

    protected override void OnParametersSet()
    {
        var filePath = Path.Combine(WebHostEnvironment.WebRootPath, FileName);
        if (System.IO.File.Exists(filePath))
        {
            FileContent = System.IO.File.ReadAllText(filePath);
        }
        else
        {
            FileContent = "File not found.";
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("eval", @"
                document.querySelectorAll('script').forEach(oldScript => {
                    const newScript = document.createElement('script');
                    newScript.innerHTML = oldScript.innerHTML;
                    oldScript.parentNode.replaceChild(newScript, oldScript);
                });
            ");
        }
    }
}

<h3>File Content: @FileName</h3>
<div>@((MarkupString)FileContent)</div>
