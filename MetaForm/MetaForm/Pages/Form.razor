@page "/form"
@inject IJSRuntime JSRuntime
@inject HttpClient Http

<h3>Form Example</h3>

<div id="messageContainer" style="display:none; margin-bottom: 10px;"></div>

<form id="exampleForm">
    <label for="Nom">Nom:</label>
    <input type="text" id="Nom" name="Nom"><br><br>

    <label for="Age">Age:</label>
    <input type="text" id="Age" name="Age"><br><br>

    <label for="Region">Région:</label>
    <select id="Region" name="Region">
        <!-- Options will be dynamically populated by JavaScript -->
    </select><br><br>

    <!-- Ajoutez d'autres champs ici si nécessaire -->

    <button type="button" @onclick="SaveRecord">Sauvegarder</button>
</form>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("associateForm", "exampleForm", 1, 1); // Person ID 1 from List ID 1
            await JSRuntime.InvokeVoidAsync("associateTextField", "Nom", "Nom");
            await JSRuntime.InvokeVoidAsync("associateTextField", "Age", "Age");
            await JSRuntime.InvokeVoidAsync("associateSelectField", "Region", 2, "Id", "Nom", "Region"); //
        }
    }

    private async Task SaveRecord()
    {
        Console.WriteLine("SaveRecord called"); // Debug message
        await JSRuntime.InvokeVoidAsync("saveCurrentRecord");
    }
}
